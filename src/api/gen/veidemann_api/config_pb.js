/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.veidemann.api.BrowserConfig', null, global);
goog.exportSymbol('proto.veidemann.api.BrowserScript', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlConfig', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlEntity', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlHostGroupConfig', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlHostGroupConfig.IpRange', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlJob', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlLimitsConfig', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlScheduleConfig', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlScope', null, global);
goog.exportSymbol('proto.veidemann.api.ExtraConfig', null, global);
goog.exportSymbol('proto.veidemann.api.Label', null, global);
goog.exportSymbol('proto.veidemann.api.LogLevels', null, global);
goog.exportSymbol('proto.veidemann.api.LogLevels.Level', null, global);
goog.exportSymbol('proto.veidemann.api.LogLevels.LogLevel', null, global);
goog.exportSymbol('proto.veidemann.api.Meta', null, global);
goog.exportSymbol('proto.veidemann.api.PolitenessConfig', null, global);
goog.exportSymbol('proto.veidemann.api.PolitenessConfig.RobotsPolicy', null, global);
goog.exportSymbol('proto.veidemann.api.Role', null, global);
goog.exportSymbol('proto.veidemann.api.RoleMapping', null, global);
goog.exportSymbol('proto.veidemann.api.Seed', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.Meta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.Meta.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.Meta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.Meta.displayName = 'proto.veidemann.api.Meta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.Label = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.Label, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.Label.displayName = 'proto.veidemann.api.Label';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.CrawlEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlEntity.displayName = 'proto.veidemann.api.CrawlEntity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.Seed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.Seed.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.Seed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.Seed.displayName = 'proto.veidemann.api.Seed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.CrawlJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlJob.displayName = 'proto.veidemann.api.CrawlJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.CrawlConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlConfig.displayName = 'proto.veidemann.api.CrawlConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlScheduleConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.CrawlScheduleConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlScheduleConfig.displayName = 'proto.veidemann.api.CrawlScheduleConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlScope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.CrawlScope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlScope.displayName = 'proto.veidemann.api.CrawlScope';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlLimitsConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.CrawlLimitsConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlLimitsConfig.displayName = 'proto.veidemann.api.CrawlLimitsConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.BrowserConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.BrowserConfig.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.BrowserConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.BrowserConfig.displayName = 'proto.veidemann.api.BrowserConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.PolitenessConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.PolitenessConfig.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.PolitenessConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.PolitenessConfig.displayName = 'proto.veidemann.api.PolitenessConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.ExtraConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.ExtraConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.ExtraConfig.displayName = 'proto.veidemann.api.ExtraConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.BrowserScript = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.BrowserScript, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.BrowserScript.displayName = 'proto.veidemann.api.BrowserScript';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlHostGroupConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.CrawlHostGroupConfig.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.CrawlHostGroupConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlHostGroupConfig.displayName = 'proto.veidemann.api.CrawlHostGroupConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlHostGroupConfig.IpRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.CrawlHostGroupConfig.IpRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlHostGroupConfig.IpRange.displayName = 'proto.veidemann.api.CrawlHostGroupConfig.IpRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.LogLevels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.LogLevels.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.LogLevels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.LogLevels.displayName = 'proto.veidemann.api.LogLevels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.LogLevels.LogLevel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.LogLevels.LogLevel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.LogLevels.LogLevel.displayName = 'proto.veidemann.api.LogLevels.LogLevel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.RoleMapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.RoleMapping.repeatedFields_, proto.veidemann.api.RoleMapping.oneofGroups_);
};
goog.inherits(proto.veidemann.api.RoleMapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.RoleMapping.displayName = 'proto.veidemann.api.RoleMapping';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.Meta.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.Meta.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.Meta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.Meta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.Meta.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdBy: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastModified: (f = msg.getLastModified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastModifiedBy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    labelList: jspb.Message.toObjectList(msg.getLabelList(),
    proto.veidemann.api.Label.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.Meta}
 */
proto.veidemann.api.Meta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.Meta;
  return proto.veidemann.api.Meta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.Meta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.Meta}
 */
proto.veidemann.api.Meta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastModified(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastModifiedBy(value);
      break;
    case 7:
      var value = new proto.veidemann.api.Label;
      reader.readMessage(value,proto.veidemann.api.Label.deserializeBinaryFromReader);
      msg.addLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.Meta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.Meta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.Meta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.Meta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastModified();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastModifiedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLabelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.veidemann.api.Label.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.veidemann.api.Meta.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.Meta.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.veidemann.api.Meta.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.Meta.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp created = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.Meta.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.veidemann.api.Meta.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.Meta.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.Meta.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string created_by = 4;
 * @return {string}
 */
proto.veidemann.api.Meta.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.veidemann.api.Meta.prototype.setCreatedBy = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp last_modified = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.Meta.prototype.getLastModified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.veidemann.api.Meta.prototype.setLastModified = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.Meta.prototype.clearLastModified = function() {
  this.setLastModified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.Meta.prototype.hasLastModified = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string last_modified_by = 6;
 * @return {string}
 */
proto.veidemann.api.Meta.prototype.getLastModifiedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.veidemann.api.Meta.prototype.setLastModifiedBy = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated Label label = 7;
 * @return {!Array<!proto.veidemann.api.Label>}
 */
proto.veidemann.api.Meta.prototype.getLabelList = function() {
  return /** @type{!Array<!proto.veidemann.api.Label>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.Label, 7));
};


/** @param {!Array<!proto.veidemann.api.Label>} value */
proto.veidemann.api.Meta.prototype.setLabelList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.veidemann.api.Label=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.Label}
 */
proto.veidemann.api.Meta.prototype.addLabel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.veidemann.api.Label, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.Meta.prototype.clearLabelList = function() {
  this.setLabelList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.Label.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.Label.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.Label} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.Label.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.Label}
 */
proto.veidemann.api.Label.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.Label;
  return proto.veidemann.api.Label.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.Label} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.Label}
 */
proto.veidemann.api.Label.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.Label.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.Label.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.Label} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.Label.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.veidemann.api.Label.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.Label.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.veidemann.api.Label.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.Label.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.veidemann.api.Meta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlEntity}
 */
proto.veidemann.api.CrawlEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlEntity;
  return proto.veidemann.api.CrawlEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlEntity}
 */
proto.veidemann.api.CrawlEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.veidemann.api.Meta;
      reader.readMessage(value,proto.veidemann.api.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.Meta.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.CrawlEntity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlEntity.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Meta meta = 2;
 * @return {?proto.veidemann.api.Meta}
 */
proto.veidemann.api.CrawlEntity.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.Meta, 2));
};


/** @param {?proto.veidemann.api.Meta|undefined} value */
proto.veidemann.api.CrawlEntity.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.CrawlEntity.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.CrawlEntity.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.Seed.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.Seed.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.Seed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.Seed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.Seed.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.veidemann.api.Meta.toObject(includeInstance, f),
    entityId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    scope: (f = msg.getScope()) && proto.veidemann.api.CrawlScope.toObject(includeInstance, f),
    jobIdList: jspb.Message.getRepeatedField(msg, 5),
    disabled: jspb.Message.getFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.Seed}
 */
proto.veidemann.api.Seed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.Seed;
  return proto.veidemann.api.Seed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.Seed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.Seed}
 */
proto.veidemann.api.Seed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.veidemann.api.Meta;
      reader.readMessage(value,proto.veidemann.api.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    case 4:
      var value = new proto.veidemann.api.CrawlScope;
      reader.readMessage(value,proto.veidemann.api.CrawlScope.deserializeBinaryFromReader);
      msg.setScope(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addJobId(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.Seed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.Seed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.Seed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.Seed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.Meta.serializeBinaryToWriter
    );
  }
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getScope();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.veidemann.api.CrawlScope.serializeBinaryToWriter
    );
  }
  f = message.getJobIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getDisabled();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.Seed.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.Seed.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Meta meta = 2;
 * @return {?proto.veidemann.api.Meta}
 */
proto.veidemann.api.Seed.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.Meta, 2));
};


/** @param {?proto.veidemann.api.Meta|undefined} value */
proto.veidemann.api.Seed.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.Seed.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.Seed.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string entity_id = 3;
 * @return {string}
 */
proto.veidemann.api.Seed.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.Seed.prototype.setEntityId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional CrawlScope scope = 4;
 * @return {?proto.veidemann.api.CrawlScope}
 */
proto.veidemann.api.Seed.prototype.getScope = function() {
  return /** @type{?proto.veidemann.api.CrawlScope} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.CrawlScope, 4));
};


/** @param {?proto.veidemann.api.CrawlScope|undefined} value */
proto.veidemann.api.Seed.prototype.setScope = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.Seed.prototype.clearScope = function() {
  this.setScope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.Seed.prototype.hasScope = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string job_id = 5;
 * @return {!Array<string>}
 */
proto.veidemann.api.Seed.prototype.getJobIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.veidemann.api.Seed.prototype.setJobIdList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.Seed.prototype.addJobId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.Seed.prototype.clearJobIdList = function() {
  this.setJobIdList([]);
};


/**
 * optional bool disabled = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.Seed.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.veidemann.api.Seed.prototype.setDisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlJob.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.veidemann.api.Meta.toObject(includeInstance, f),
    scheduleId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    limits: (f = msg.getLimits()) && proto.veidemann.api.CrawlLimitsConfig.toObject(includeInstance, f),
    crawlConfigId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    disabled: jspb.Message.getFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlJob}
 */
proto.veidemann.api.CrawlJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlJob;
  return proto.veidemann.api.CrawlJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlJob}
 */
proto.veidemann.api.CrawlJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.veidemann.api.Meta;
      reader.readMessage(value,proto.veidemann.api.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduleId(value);
      break;
    case 4:
      var value = new proto.veidemann.api.CrawlLimitsConfig;
      reader.readMessage(value,proto.veidemann.api.CrawlLimitsConfig.deserializeBinaryFromReader);
      msg.setLimits(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCrawlConfigId(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.Meta.serializeBinaryToWriter
    );
  }
  f = message.getScheduleId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLimits();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.veidemann.api.CrawlLimitsConfig.serializeBinaryToWriter
    );
  }
  f = message.getCrawlConfigId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisabled();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.CrawlJob.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlJob.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Meta meta = 2;
 * @return {?proto.veidemann.api.Meta}
 */
proto.veidemann.api.CrawlJob.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.Meta, 2));
};


/** @param {?proto.veidemann.api.Meta|undefined} value */
proto.veidemann.api.CrawlJob.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.CrawlJob.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.CrawlJob.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string schedule_id = 3;
 * @return {string}
 */
proto.veidemann.api.CrawlJob.prototype.getScheduleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlJob.prototype.setScheduleId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional CrawlLimitsConfig limits = 4;
 * @return {?proto.veidemann.api.CrawlLimitsConfig}
 */
proto.veidemann.api.CrawlJob.prototype.getLimits = function() {
  return /** @type{?proto.veidemann.api.CrawlLimitsConfig} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.CrawlLimitsConfig, 4));
};


/** @param {?proto.veidemann.api.CrawlLimitsConfig|undefined} value */
proto.veidemann.api.CrawlJob.prototype.setLimits = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.CrawlJob.prototype.clearLimits = function() {
  this.setLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.CrawlJob.prototype.hasLimits = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string crawl_config_id = 5;
 * @return {string}
 */
proto.veidemann.api.CrawlJob.prototype.getCrawlConfigId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlJob.prototype.setCrawlConfigId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool disabled = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.CrawlJob.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.veidemann.api.CrawlJob.prototype.setDisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.veidemann.api.Meta.toObject(includeInstance, f),
    browserConfigId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    politenessId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    extra: (f = msg.getExtra()) && proto.veidemann.api.ExtraConfig.toObject(includeInstance, f),
    minimumDnsTtlS: jspb.Message.getFieldWithDefault(msg, 10, 0),
    priorityWeight: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    depthFirst: jspb.Message.getFieldWithDefault(msg, 20, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlConfig}
 */
proto.veidemann.api.CrawlConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlConfig;
  return proto.veidemann.api.CrawlConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlConfig}
 */
proto.veidemann.api.CrawlConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.veidemann.api.Meta;
      reader.readMessage(value,proto.veidemann.api.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrowserConfigId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolitenessId(value);
      break;
    case 9:
      var value = new proto.veidemann.api.ExtraConfig;
      reader.readMessage(value,proto.veidemann.api.ExtraConfig.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinimumDnsTtlS(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriorityWeight(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDepthFirst(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.Meta.serializeBinaryToWriter
    );
  }
  f = message.getBrowserConfigId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPolitenessId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.veidemann.api.ExtraConfig.serializeBinaryToWriter
    );
  }
  f = message.getMinimumDnsTtlS();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPriorityWeight();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getDepthFirst();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.CrawlConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlConfig.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Meta meta = 2;
 * @return {?proto.veidemann.api.Meta}
 */
proto.veidemann.api.CrawlConfig.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.Meta, 2));
};


/** @param {?proto.veidemann.api.Meta|undefined} value */
proto.veidemann.api.CrawlConfig.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.CrawlConfig.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.CrawlConfig.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string browser_config_id = 7;
 * @return {string}
 */
proto.veidemann.api.CrawlConfig.prototype.getBrowserConfigId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlConfig.prototype.setBrowserConfigId = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string politeness_id = 8;
 * @return {string}
 */
proto.veidemann.api.CrawlConfig.prototype.getPolitenessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlConfig.prototype.setPolitenessId = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional ExtraConfig extra = 9;
 * @return {?proto.veidemann.api.ExtraConfig}
 */
proto.veidemann.api.CrawlConfig.prototype.getExtra = function() {
  return /** @type{?proto.veidemann.api.ExtraConfig} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.ExtraConfig, 9));
};


/** @param {?proto.veidemann.api.ExtraConfig|undefined} value */
proto.veidemann.api.CrawlConfig.prototype.setExtra = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.CrawlConfig.prototype.clearExtra = function() {
  this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.CrawlConfig.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 minimum_dns_ttl_s = 10;
 * @return {number}
 */
proto.veidemann.api.CrawlConfig.prototype.getMinimumDnsTtlS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlConfig.prototype.setMinimumDnsTtlS = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional double priority_weight = 11;
 * @return {number}
 */
proto.veidemann.api.CrawlConfig.prototype.getPriorityWeight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.veidemann.api.CrawlConfig.prototype.setPriorityWeight = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional bool depth_first = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.CrawlConfig.prototype.getDepthFirst = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.veidemann.api.CrawlConfig.prototype.setDepthFirst = function(value) {
  jspb.Message.setProto3BooleanField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlScheduleConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlScheduleConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlScheduleConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.veidemann.api.Meta.toObject(includeInstance, f),
    cronExpression: jspb.Message.getFieldWithDefault(msg, 3, ""),
    validFrom: (f = msg.getValidFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    validTo: (f = msg.getValidTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlScheduleConfig}
 */
proto.veidemann.api.CrawlScheduleConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlScheduleConfig;
  return proto.veidemann.api.CrawlScheduleConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlScheduleConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlScheduleConfig}
 */
proto.veidemann.api.CrawlScheduleConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.veidemann.api.Meta;
      reader.readMessage(value,proto.veidemann.api.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCronExpression(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setValidFrom(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setValidTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlScheduleConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlScheduleConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlScheduleConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.Meta.serializeBinaryToWriter
    );
  }
  f = message.getCronExpression();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValidFrom();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getValidTo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlScheduleConfig.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Meta meta = 2;
 * @return {?proto.veidemann.api.Meta}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.Meta, 2));
};


/** @param {?proto.veidemann.api.Meta|undefined} value */
proto.veidemann.api.CrawlScheduleConfig.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string cron_expression = 3;
 * @return {string}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.getCronExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlScheduleConfig.prototype.setCronExpression = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp valid_from = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.getValidFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.veidemann.api.CrawlScheduleConfig.prototype.setValidFrom = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.clearValidFrom = function() {
  this.setValidFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.hasValidFrom = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp valid_to = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.getValidTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.veidemann.api.CrawlScheduleConfig.prototype.setValidTo = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.clearValidTo = function() {
  this.setValidTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.CrawlScheduleConfig.prototype.hasValidTo = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlScope.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlScope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlScope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlScope.toObject = function(includeInstance, msg) {
  var f, obj = {
    surtPrefix: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlScope}
 */
proto.veidemann.api.CrawlScope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlScope;
  return proto.veidemann.api.CrawlScope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlScope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlScope}
 */
proto.veidemann.api.CrawlScope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSurtPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlScope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlScope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlScope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlScope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSurtPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string surt_prefix = 1;
 * @return {string}
 */
proto.veidemann.api.CrawlScope.prototype.getSurtPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlScope.prototype.setSurtPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlLimitsConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlLimitsConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlLimitsConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlLimitsConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    depth: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxDurationS: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxBytes: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlLimitsConfig}
 */
proto.veidemann.api.CrawlLimitsConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlLimitsConfig;
  return proto.veidemann.api.CrawlLimitsConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlLimitsConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlLimitsConfig}
 */
proto.veidemann.api.CrawlLimitsConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxDurationS(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlLimitsConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlLimitsConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlLimitsConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlLimitsConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDepth();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMaxDurationS();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMaxBytes();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int32 depth = 1;
 * @return {number}
 */
proto.veidemann.api.CrawlLimitsConfig.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlLimitsConfig.prototype.setDepth = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 max_duration_s = 2;
 * @return {number}
 */
proto.veidemann.api.CrawlLimitsConfig.prototype.getMaxDurationS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlLimitsConfig.prototype.setMaxDurationS = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 max_bytes = 3;
 * @return {number}
 */
proto.veidemann.api.CrawlLimitsConfig.prototype.getMaxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlLimitsConfig.prototype.setMaxBytes = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.BrowserConfig.repeatedFields_ = [7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.BrowserConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.BrowserConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.BrowserConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.BrowserConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.veidemann.api.Meta.toObject(includeInstance, f),
    userAgent: jspb.Message.getFieldWithDefault(msg, 3, ""),
    windowWidth: jspb.Message.getFieldWithDefault(msg, 4, 0),
    windowHeight: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pageLoadTimeoutMs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    scriptSelectorList: jspb.Message.getRepeatedField(msg, 7),
    scriptIdList: jspb.Message.getRepeatedField(msg, 8),
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    scriptParametersMap: (f = msg.getScriptParametersMap()) ? f.toObject(includeInstance, undefined) : [],
    sleepAfterPageloadMs: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.BrowserConfig}
 */
proto.veidemann.api.BrowserConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.BrowserConfig;
  return proto.veidemann.api.BrowserConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.BrowserConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.BrowserConfig}
 */
proto.veidemann.api.BrowserConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.veidemann.api.Meta;
      reader.readMessage(value,proto.veidemann.api.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserAgent(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWindowWidth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWindowHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageLoadTimeoutMs(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addScriptSelector(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addScriptId(value);
      break;
    case 16:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 17:
      var value = msg.getScriptParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSleepAfterPageloadMs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.BrowserConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.BrowserConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.BrowserConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.BrowserConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.Meta.serializeBinaryToWriter
    );
  }
  f = message.getUserAgent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWindowWidth();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getWindowHeight();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPageLoadTimeoutMs();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getScriptSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getScriptIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(16, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getScriptParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(17, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSleepAfterPageloadMs();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.BrowserConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.BrowserConfig.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Meta meta = 2;
 * @return {?proto.veidemann.api.Meta}
 */
proto.veidemann.api.BrowserConfig.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.Meta, 2));
};


/** @param {?proto.veidemann.api.Meta|undefined} value */
proto.veidemann.api.BrowserConfig.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.BrowserConfig.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.BrowserConfig.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string user_agent = 3;
 * @return {string}
 */
proto.veidemann.api.BrowserConfig.prototype.getUserAgent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.BrowserConfig.prototype.setUserAgent = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 window_width = 4;
 * @return {number}
 */
proto.veidemann.api.BrowserConfig.prototype.getWindowWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserConfig.prototype.setWindowWidth = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 window_height = 5;
 * @return {number}
 */
proto.veidemann.api.BrowserConfig.prototype.getWindowHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserConfig.prototype.setWindowHeight = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 page_load_timeout_ms = 6;
 * @return {number}
 */
proto.veidemann.api.BrowserConfig.prototype.getPageLoadTimeoutMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserConfig.prototype.setPageLoadTimeoutMs = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string script_selector = 7;
 * @return {!Array<string>}
 */
proto.veidemann.api.BrowserConfig.prototype.getScriptSelectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<string>} value */
proto.veidemann.api.BrowserConfig.prototype.setScriptSelectorList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.BrowserConfig.prototype.addScriptSelector = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.BrowserConfig.prototype.clearScriptSelectorList = function() {
  this.setScriptSelectorList([]);
};


/**
 * repeated string script_id = 8;
 * @return {!Array<string>}
 */
proto.veidemann.api.BrowserConfig.prototype.getScriptIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<string>} value */
proto.veidemann.api.BrowserConfig.prototype.setScriptIdList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.BrowserConfig.prototype.addScriptId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.BrowserConfig.prototype.clearScriptIdList = function() {
  this.setScriptIdList([]);
};


/**
 * map<string, string> headers = 16;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.veidemann.api.BrowserConfig.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 16, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.veidemann.api.BrowserConfig.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
};


/**
 * map<string, string> script_parameters = 17;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.veidemann.api.BrowserConfig.prototype.getScriptParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 17, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.veidemann.api.BrowserConfig.prototype.clearScriptParametersMap = function() {
  this.getScriptParametersMap().clear();
};


/**
 * optional int64 sleep_after_pageload_ms = 18;
 * @return {number}
 */
proto.veidemann.api.BrowserConfig.prototype.getSleepAfterPageloadMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserConfig.prototype.setSleepAfterPageloadMs = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.PolitenessConfig.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.PolitenessConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.PolitenessConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.PolitenessConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.PolitenessConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.veidemann.api.Meta.toObject(includeInstance, f),
    robotsPolicy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    minimumRobotsValidityDurationS: jspb.Message.getFieldWithDefault(msg, 11, 0),
    customRobots: jspb.Message.getFieldWithDefault(msg, 20, ""),
    minTimeBetweenPageLoadMs: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxTimeBetweenPageLoadMs: jspb.Message.getFieldWithDefault(msg, 5, 0),
    delayFactor: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    maxRetries: jspb.Message.getFieldWithDefault(msg, 7, 0),
    retryDelaySeconds: jspb.Message.getFieldWithDefault(msg, 8, 0),
    crawlHostGroupSelectorList: jspb.Message.getRepeatedField(msg, 9),
    useHostname: jspb.Message.getFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.PolitenessConfig}
 */
proto.veidemann.api.PolitenessConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.PolitenessConfig;
  return proto.veidemann.api.PolitenessConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.PolitenessConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.PolitenessConfig}
 */
proto.veidemann.api.PolitenessConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.veidemann.api.Meta;
      reader.readMessage(value,proto.veidemann.api.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = /** @type {!proto.veidemann.api.PolitenessConfig.RobotsPolicy} */ (reader.readEnum());
      msg.setRobotsPolicy(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinimumRobotsValidityDurationS(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomRobots(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinTimeBetweenPageLoadMs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxTimeBetweenPageLoadMs(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDelayFactor(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxRetries(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetryDelaySeconds(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addCrawlHostGroupSelector(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseHostname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.PolitenessConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.PolitenessConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.PolitenessConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.PolitenessConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.Meta.serializeBinaryToWriter
    );
  }
  f = message.getRobotsPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMinimumRobotsValidityDurationS();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getCustomRobots();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getMinTimeBetweenPageLoadMs();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMaxTimeBetweenPageLoadMs();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getDelayFactor();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getMaxRetries();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getRetryDelaySeconds();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCrawlHostGroupSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getUseHostname();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.veidemann.api.PolitenessConfig.RobotsPolicy = {
  OBEY_ROBOTS: 0,
  IGNORE_ROBOTS: 1,
  CUSTOM_ROBOTS: 2
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.PolitenessConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.PolitenessConfig.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Meta meta = 2;
 * @return {?proto.veidemann.api.Meta}
 */
proto.veidemann.api.PolitenessConfig.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.Meta, 2));
};


/** @param {?proto.veidemann.api.Meta|undefined} value */
proto.veidemann.api.PolitenessConfig.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.PolitenessConfig.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.PolitenessConfig.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RobotsPolicy robots_policy = 3;
 * @return {!proto.veidemann.api.PolitenessConfig.RobotsPolicy}
 */
proto.veidemann.api.PolitenessConfig.prototype.getRobotsPolicy = function() {
  return /** @type {!proto.veidemann.api.PolitenessConfig.RobotsPolicy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.veidemann.api.PolitenessConfig.RobotsPolicy} value */
proto.veidemann.api.PolitenessConfig.prototype.setRobotsPolicy = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 minimum_robots_validity_duration_s = 11;
 * @return {number}
 */
proto.veidemann.api.PolitenessConfig.prototype.getMinimumRobotsValidityDurationS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.veidemann.api.PolitenessConfig.prototype.setMinimumRobotsValidityDurationS = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string custom_robots = 20;
 * @return {string}
 */
proto.veidemann.api.PolitenessConfig.prototype.getCustomRobots = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.veidemann.api.PolitenessConfig.prototype.setCustomRobots = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int64 min_time_between_page_load_ms = 4;
 * @return {number}
 */
proto.veidemann.api.PolitenessConfig.prototype.getMinTimeBetweenPageLoadMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.veidemann.api.PolitenessConfig.prototype.setMinTimeBetweenPageLoadMs = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 max_time_between_page_load_ms = 5;
 * @return {number}
 */
proto.veidemann.api.PolitenessConfig.prototype.getMaxTimeBetweenPageLoadMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.veidemann.api.PolitenessConfig.prototype.setMaxTimeBetweenPageLoadMs = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float delay_factor = 6;
 * @return {number}
 */
proto.veidemann.api.PolitenessConfig.prototype.getDelayFactor = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.veidemann.api.PolitenessConfig.prototype.setDelayFactor = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 max_retries = 7;
 * @return {number}
 */
proto.veidemann.api.PolitenessConfig.prototype.getMaxRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.veidemann.api.PolitenessConfig.prototype.setMaxRetries = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 retry_delay_seconds = 8;
 * @return {number}
 */
proto.veidemann.api.PolitenessConfig.prototype.getRetryDelaySeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.veidemann.api.PolitenessConfig.prototype.setRetryDelaySeconds = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated string crawl_host_group_selector = 9;
 * @return {!Array<string>}
 */
proto.veidemann.api.PolitenessConfig.prototype.getCrawlHostGroupSelectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<string>} value */
proto.veidemann.api.PolitenessConfig.prototype.setCrawlHostGroupSelectorList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.PolitenessConfig.prototype.addCrawlHostGroupSelector = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.PolitenessConfig.prototype.clearCrawlHostGroupSelectorList = function() {
  this.setCrawlHostGroupSelectorList([]);
};


/**
 * optional bool use_hostname = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.PolitenessConfig.prototype.getUseHostname = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.veidemann.api.PolitenessConfig.prototype.setUseHostname = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.ExtraConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.ExtraConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.ExtraConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ExtraConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    extractText: jspb.Message.getFieldWithDefault(msg, 5, false),
    createSnapshot: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.ExtraConfig}
 */
proto.veidemann.api.ExtraConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.ExtraConfig;
  return proto.veidemann.api.ExtraConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.ExtraConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.ExtraConfig}
 */
proto.veidemann.api.ExtraConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExtractText(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreateSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.ExtraConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.ExtraConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.ExtraConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ExtraConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtractText();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCreateSnapshot();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bool extract_text = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.ExtraConfig.prototype.getExtractText = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.veidemann.api.ExtraConfig.prototype.setExtractText = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool create_snapshot = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.ExtraConfig.prototype.getCreateSnapshot = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.veidemann.api.ExtraConfig.prototype.setCreateSnapshot = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.BrowserScript.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.BrowserScript.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.BrowserScript} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.BrowserScript.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.veidemann.api.Meta.toObject(includeInstance, f),
    script: jspb.Message.getFieldWithDefault(msg, 3, ""),
    urlRegexp: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.BrowserScript}
 */
proto.veidemann.api.BrowserScript.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.BrowserScript;
  return proto.veidemann.api.BrowserScript.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.BrowserScript} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.BrowserScript}
 */
proto.veidemann.api.BrowserScript.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.veidemann.api.Meta;
      reader.readMessage(value,proto.veidemann.api.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScript(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrlRegexp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.BrowserScript.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.BrowserScript.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.BrowserScript} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.BrowserScript.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.Meta.serializeBinaryToWriter
    );
  }
  f = message.getScript();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrlRegexp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.BrowserScript.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.BrowserScript.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Meta meta = 2;
 * @return {?proto.veidemann.api.Meta}
 */
proto.veidemann.api.BrowserScript.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.Meta, 2));
};


/** @param {?proto.veidemann.api.Meta|undefined} value */
proto.veidemann.api.BrowserScript.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.BrowserScript.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.BrowserScript.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string script = 3;
 * @return {string}
 */
proto.veidemann.api.BrowserScript.prototype.getScript = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.BrowserScript.prototype.setScript = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string url_regexp = 4;
 * @return {string}
 */
proto.veidemann.api.BrowserScript.prototype.getUrlRegexp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.veidemann.api.BrowserScript.prototype.setUrlRegexp = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.CrawlHostGroupConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlHostGroupConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlHostGroupConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlHostGroupConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlHostGroupConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.veidemann.api.Meta.toObject(includeInstance, f),
    ipRangeList: jspb.Message.toObjectList(msg.getIpRangeList(),
    proto.veidemann.api.CrawlHostGroupConfig.IpRange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlHostGroupConfig}
 */
proto.veidemann.api.CrawlHostGroupConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlHostGroupConfig;
  return proto.veidemann.api.CrawlHostGroupConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlHostGroupConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlHostGroupConfig}
 */
proto.veidemann.api.CrawlHostGroupConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.veidemann.api.Meta;
      reader.readMessage(value,proto.veidemann.api.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = new proto.veidemann.api.CrawlHostGroupConfig.IpRange;
      reader.readMessage(value,proto.veidemann.api.CrawlHostGroupConfig.IpRange.deserializeBinaryFromReader);
      msg.addIpRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlHostGroupConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlHostGroupConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlHostGroupConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlHostGroupConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.veidemann.api.Meta.serializeBinaryToWriter
    );
  }
  f = message.getIpRangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.veidemann.api.CrawlHostGroupConfig.IpRange.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlHostGroupConfig.IpRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlHostGroupConfig.IpRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipFrom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ipTo: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlHostGroupConfig.IpRange}
 */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlHostGroupConfig.IpRange;
  return proto.veidemann.api.CrawlHostGroupConfig.IpRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlHostGroupConfig.IpRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlHostGroupConfig.IpRange}
 */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpFrom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlHostGroupConfig.IpRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlHostGroupConfig.IpRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpFrom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIpTo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ip_from = 1;
 * @return {string}
 */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.prototype.getIpFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.prototype.setIpFrom = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ip_to = 2;
 * @return {string}
 */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.prototype.getIpTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlHostGroupConfig.IpRange.prototype.setIpTo = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.CrawlHostGroupConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.CrawlHostGroupConfig.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Meta meta = 2;
 * @return {?proto.veidemann.api.Meta}
 */
proto.veidemann.api.CrawlHostGroupConfig.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.Meta, 2));
};


/** @param {?proto.veidemann.api.Meta|undefined} value */
proto.veidemann.api.CrawlHostGroupConfig.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.CrawlHostGroupConfig.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.CrawlHostGroupConfig.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated IpRange ip_range = 3;
 * @return {!Array<!proto.veidemann.api.CrawlHostGroupConfig.IpRange>}
 */
proto.veidemann.api.CrawlHostGroupConfig.prototype.getIpRangeList = function() {
  return /** @type{!Array<!proto.veidemann.api.CrawlHostGroupConfig.IpRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.CrawlHostGroupConfig.IpRange, 3));
};


/** @param {!Array<!proto.veidemann.api.CrawlHostGroupConfig.IpRange>} value */
proto.veidemann.api.CrawlHostGroupConfig.prototype.setIpRangeList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.veidemann.api.CrawlHostGroupConfig.IpRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.CrawlHostGroupConfig.IpRange}
 */
proto.veidemann.api.CrawlHostGroupConfig.prototype.addIpRange = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.veidemann.api.CrawlHostGroupConfig.IpRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.CrawlHostGroupConfig.prototype.clearIpRangeList = function() {
  this.setIpRangeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.LogLevels.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.LogLevels.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.LogLevels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.LogLevels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.LogLevels.toObject = function(includeInstance, msg) {
  var f, obj = {
    logLevelList: jspb.Message.toObjectList(msg.getLogLevelList(),
    proto.veidemann.api.LogLevels.LogLevel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.LogLevels}
 */
proto.veidemann.api.LogLevels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.LogLevels;
  return proto.veidemann.api.LogLevels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.LogLevels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.LogLevels}
 */
proto.veidemann.api.LogLevels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.veidemann.api.LogLevels.LogLevel;
      reader.readMessage(value,proto.veidemann.api.LogLevels.LogLevel.deserializeBinaryFromReader);
      msg.addLogLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.LogLevels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.LogLevels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.LogLevels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.LogLevels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogLevelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.veidemann.api.LogLevels.LogLevel.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.veidemann.api.LogLevels.Level = {
  UNDEFINED: 0,
  ALL: 1,
  TRACE: 2,
  DEBUG: 3,
  INFO: 4,
  WARN: 5,
  ERROR: 6,
  FATAL: 7,
  OFF: 8
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.LogLevels.LogLevel.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.LogLevels.LogLevel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.LogLevels.LogLevel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.LogLevels.LogLevel.toObject = function(includeInstance, msg) {
  var f, obj = {
    logger: jspb.Message.getFieldWithDefault(msg, 1, ""),
    level: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.LogLevels.LogLevel}
 */
proto.veidemann.api.LogLevels.LogLevel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.LogLevels.LogLevel;
  return proto.veidemann.api.LogLevels.LogLevel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.LogLevels.LogLevel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.LogLevels.LogLevel}
 */
proto.veidemann.api.LogLevels.LogLevel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogger(value);
      break;
    case 2:
      var value = /** @type {!proto.veidemann.api.LogLevels.Level} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.LogLevels.LogLevel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.LogLevels.LogLevel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.LogLevels.LogLevel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.LogLevels.LogLevel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogger();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string logger = 1;
 * @return {string}
 */
proto.veidemann.api.LogLevels.LogLevel.prototype.getLogger = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.LogLevels.LogLevel.prototype.setLogger = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Level level = 2;
 * @return {!proto.veidemann.api.LogLevels.Level}
 */
proto.veidemann.api.LogLevels.LogLevel.prototype.getLevel = function() {
  return /** @type {!proto.veidemann.api.LogLevels.Level} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.veidemann.api.LogLevels.Level} value */
proto.veidemann.api.LogLevels.LogLevel.prototype.setLevel = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated LogLevel log_level = 1;
 * @return {!Array<!proto.veidemann.api.LogLevels.LogLevel>}
 */
proto.veidemann.api.LogLevels.prototype.getLogLevelList = function() {
  return /** @type{!Array<!proto.veidemann.api.LogLevels.LogLevel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.LogLevels.LogLevel, 1));
};


/** @param {!Array<!proto.veidemann.api.LogLevels.LogLevel>} value */
proto.veidemann.api.LogLevels.prototype.setLogLevelList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.LogLevels.LogLevel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.LogLevels.LogLevel}
 */
proto.veidemann.api.LogLevels.prototype.addLogLevel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.LogLevels.LogLevel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.LogLevels.prototype.clearLogLevelList = function() {
  this.setLogLevelList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.RoleMapping.repeatedFields_ = [4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.veidemann.api.RoleMapping.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.veidemann.api.RoleMapping.EmailOrGroupCase = {
  EMAIL_OR_GROUP_NOT_SET: 0,
  EMAIL: 2,
  GROUP: 3
};

/**
 * @return {proto.veidemann.api.RoleMapping.EmailOrGroupCase}
 */
proto.veidemann.api.RoleMapping.prototype.getEmailOrGroupCase = function() {
  return /** @type {proto.veidemann.api.RoleMapping.EmailOrGroupCase} */(jspb.Message.computeOneofCase(this, proto.veidemann.api.RoleMapping.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.RoleMapping.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.RoleMapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.RoleMapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RoleMapping.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    group: jspb.Message.getFieldWithDefault(msg, 3, ""),
    roleList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.RoleMapping}
 */
proto.veidemann.api.RoleMapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.RoleMapping;
  return proto.veidemann.api.RoleMapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.RoleMapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.RoleMapping}
 */
proto.veidemann.api.RoleMapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 4:
      var value = /** @type {!Array<!proto.veidemann.api.Role>} */ (reader.readPackedEnum());
      msg.setRoleList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.RoleMapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.RoleMapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.RoleMapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RoleMapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRoleList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.RoleMapping.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.RoleMapping.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.veidemann.api.RoleMapping.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.RoleMapping.prototype.setEmail = function(value) {
  jspb.Message.setOneofField(this, 2, proto.veidemann.api.RoleMapping.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.veidemann.api.RoleMapping.prototype.clearEmail = function() {
  jspb.Message.setOneofField(this, 2, proto.veidemann.api.RoleMapping.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.RoleMapping.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string group = 3;
 * @return {string}
 */
proto.veidemann.api.RoleMapping.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.RoleMapping.prototype.setGroup = function(value) {
  jspb.Message.setOneofField(this, 3, proto.veidemann.api.RoleMapping.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.veidemann.api.RoleMapping.prototype.clearGroup = function() {
  jspb.Message.setOneofField(this, 3, proto.veidemann.api.RoleMapping.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.RoleMapping.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Role role = 4;
 * @return {!Array<!proto.veidemann.api.Role>}
 */
proto.veidemann.api.RoleMapping.prototype.getRoleList = function() {
  return /** @type {!Array<!proto.veidemann.api.Role>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<!proto.veidemann.api.Role>} value */
proto.veidemann.api.RoleMapping.prototype.setRoleList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.veidemann.api.Role} value
 * @param {number=} opt_index
 */
proto.veidemann.api.RoleMapping.prototype.addRole = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.RoleMapping.prototype.clearRoleList = function() {
  this.setRoleList([]);
};


/**
 * @enum {number}
 */
proto.veidemann.api.Role = {
  ANY_USER: 0,
  ANY: 1,
  ADMIN: 2,
  CURATOR: 3,
  READONLY: 4
};

goog.object.extend(exports, proto.veidemann.api);
