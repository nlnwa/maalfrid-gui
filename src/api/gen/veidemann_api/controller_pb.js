/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var veidemann_api_config_pb = require('../veidemann_api/config_pb.js');
goog.object.extend(proto, veidemann_api_config_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var protoc$gen$swagger_options_annotations_pb = require('../protoc-gen-swagger/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$swagger_options_annotations_pb);
goog.exportSymbol('proto.veidemann.api.BrowserConfigListReply', null, global);
goog.exportSymbol('proto.veidemann.api.BrowserScriptListReply', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlConfigListReply', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlEntityListReply', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlHostGroupConfigListReply', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlJobListReply', null, global);
goog.exportSymbol('proto.veidemann.api.CrawlScheduleConfigListReply', null, global);
goog.exportSymbol('proto.veidemann.api.GetRequest', null, global);
goog.exportSymbol('proto.veidemann.api.ListRequest', null, global);
goog.exportSymbol('proto.veidemann.api.OpenIdConnectIssuerReply', null, global);
goog.exportSymbol('proto.veidemann.api.PolitenessConfigListReply', null, global);
goog.exportSymbol('proto.veidemann.api.RoleList', null, global);
goog.exportSymbol('proto.veidemann.api.RoleMappingsListReply', null, global);
goog.exportSymbol('proto.veidemann.api.RoleMappingsListRequest', null, global);
goog.exportSymbol('proto.veidemann.api.RunCrawlReply', null, global);
goog.exportSymbol('proto.veidemann.api.RunCrawlRequest', null, global);
goog.exportSymbol('proto.veidemann.api.SeedListReply', null, global);
goog.exportSymbol('proto.veidemann.api.SeedListRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.GetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.GetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.GetRequest.displayName = 'proto.veidemann.api.GetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.ListRequest.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.ListRequest.displayName = 'proto.veidemann.api.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlEntityListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.CrawlEntityListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.CrawlEntityListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlEntityListReply.displayName = 'proto.veidemann.api.CrawlEntityListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.SeedListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.SeedListRequest.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.SeedListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.SeedListRequest.displayName = 'proto.veidemann.api.SeedListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.SeedListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.SeedListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.SeedListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.SeedListReply.displayName = 'proto.veidemann.api.SeedListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlJobListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.CrawlJobListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.CrawlJobListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlJobListReply.displayName = 'proto.veidemann.api.CrawlJobListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlConfigListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.CrawlConfigListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.CrawlConfigListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlConfigListReply.displayName = 'proto.veidemann.api.CrawlConfigListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlScheduleConfigListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.CrawlScheduleConfigListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.CrawlScheduleConfigListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlScheduleConfigListReply.displayName = 'proto.veidemann.api.CrawlScheduleConfigListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.PolitenessConfigListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.PolitenessConfigListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.PolitenessConfigListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.PolitenessConfigListReply.displayName = 'proto.veidemann.api.PolitenessConfigListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.BrowserConfigListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.BrowserConfigListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.BrowserConfigListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.BrowserConfigListReply.displayName = 'proto.veidemann.api.BrowserConfigListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.BrowserScriptListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.BrowserScriptListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.BrowserScriptListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.BrowserScriptListReply.displayName = 'proto.veidemann.api.BrowserScriptListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.CrawlHostGroupConfigListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.CrawlHostGroupConfigListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.CrawlHostGroupConfigListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.CrawlHostGroupConfigListReply.displayName = 'proto.veidemann.api.CrawlHostGroupConfigListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.RunCrawlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.RunCrawlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.RunCrawlRequest.displayName = 'proto.veidemann.api.RunCrawlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.RunCrawlReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.RunCrawlReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.RunCrawlReply.displayName = 'proto.veidemann.api.RunCrawlReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.RoleList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.RoleList.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.RoleList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.RoleList.displayName = 'proto.veidemann.api.RoleList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.RoleMappingsListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.RoleMappingsListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.RoleMappingsListRequest.displayName = 'proto.veidemann.api.RoleMappingsListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.RoleMappingsListReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.RoleMappingsListReply.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.RoleMappingsListReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.RoleMappingsListReply.displayName = 'proto.veidemann.api.RoleMappingsListReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.OpenIdConnectIssuerReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.OpenIdConnectIssuerReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.OpenIdConnectIssuerReply.displayName = 'proto.veidemann.api.OpenIdConnectIssuerReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.GetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.GetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.GetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.GetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.GetRequest}
 */
proto.veidemann.api.GetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.GetRequest;
  return proto.veidemann.api.GetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.GetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.GetRequest}
 */
proto.veidemann.api.GetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.GetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.GetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.GetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.GetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.GetRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.GetRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.ListRequest.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: jspb.Message.getRepeatedField(msg, 1),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelSelectorList: jspb.Message.getRepeatedField(msg, 3),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.ListRequest}
 */
proto.veidemann.api.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.ListRequest;
  return proto.veidemann.api.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.ListRequest}
 */
proto.veidemann.api.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabelSelector(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated string id = 1;
 * @return {!Array<string>}
 */
proto.veidemann.api.ListRequest.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.veidemann.api.ListRequest.prototype.setIdList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.ListRequest.prototype.addId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.ListRequest.prototype.clearIdList = function() {
  this.setIdList([]);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.veidemann.api.ListRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.ListRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string label_selector = 3;
 * @return {!Array<string>}
 */
proto.veidemann.api.ListRequest.prototype.getLabelSelectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.veidemann.api.ListRequest.prototype.setLabelSelectorList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.ListRequest.prototype.addLabelSelector = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.ListRequest.prototype.clearLabelSelectorList = function() {
  this.setLabelSelectorList([]);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.ListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.ListRequest.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.ListRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.ListRequest.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.CrawlEntityListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlEntityListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlEntityListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlEntityListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlEntityListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.CrawlEntity.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlEntityListReply}
 */
proto.veidemann.api.CrawlEntityListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlEntityListReply;
  return proto.veidemann.api.CrawlEntityListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlEntityListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlEntityListReply}
 */
proto.veidemann.api.CrawlEntityListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.CrawlEntity;
      reader.readMessage(value,veidemann_api_config_pb.CrawlEntity.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlEntityListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlEntityListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlEntityListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlEntityListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.CrawlEntity.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated CrawlEntity value = 1;
 * @return {!Array<!proto.veidemann.api.CrawlEntity>}
 */
proto.veidemann.api.CrawlEntityListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.CrawlEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.CrawlEntity, 1));
};


/** @param {!Array<!proto.veidemann.api.CrawlEntity>} value */
proto.veidemann.api.CrawlEntityListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.CrawlEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.CrawlEntity}
 */
proto.veidemann.api.CrawlEntityListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.CrawlEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.CrawlEntityListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.CrawlEntityListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlEntityListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.CrawlEntityListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlEntityListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.CrawlEntityListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlEntityListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.SeedListRequest.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.SeedListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.SeedListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.SeedListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.SeedListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: jspb.Message.getRepeatedField(msg, 1),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    labelSelectorList: jspb.Message.getRepeatedField(msg, 3),
    crawlJobId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    entityId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.SeedListRequest}
 */
proto.veidemann.api.SeedListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.SeedListRequest;
  return proto.veidemann.api.SeedListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.SeedListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.SeedListRequest}
 */
proto.veidemann.api.SeedListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabelSelector(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCrawlJobId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.SeedListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.SeedListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.SeedListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.SeedListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabelSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getCrawlJobId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated string id = 1;
 * @return {!Array<string>}
 */
proto.veidemann.api.SeedListRequest.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.veidemann.api.SeedListRequest.prototype.setIdList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.SeedListRequest.prototype.addId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.SeedListRequest.prototype.clearIdList = function() {
  this.setIdList([]);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.veidemann.api.SeedListRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.SeedListRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string label_selector = 3;
 * @return {!Array<string>}
 */
proto.veidemann.api.SeedListRequest.prototype.getLabelSelectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.veidemann.api.SeedListRequest.prototype.setLabelSelectorList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.SeedListRequest.prototype.addLabelSelector = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.SeedListRequest.prototype.clearLabelSelectorList = function() {
  this.setLabelSelectorList([]);
};


/**
 * optional string crawl_job_id = 4;
 * @return {string}
 */
proto.veidemann.api.SeedListRequest.prototype.getCrawlJobId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.veidemann.api.SeedListRequest.prototype.setCrawlJobId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string entity_id = 5;
 * @return {string}
 */
proto.veidemann.api.SeedListRequest.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.veidemann.api.SeedListRequest.prototype.setEntityId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.SeedListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.SeedListRequest.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.SeedListRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.SeedListRequest.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.SeedListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.SeedListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.SeedListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.SeedListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.SeedListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.Seed.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.SeedListReply}
 */
proto.veidemann.api.SeedListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.SeedListReply;
  return proto.veidemann.api.SeedListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.SeedListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.SeedListReply}
 */
proto.veidemann.api.SeedListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.Seed;
      reader.readMessage(value,veidemann_api_config_pb.Seed.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.SeedListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.SeedListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.SeedListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.SeedListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.Seed.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated Seed value = 1;
 * @return {!Array<!proto.veidemann.api.Seed>}
 */
proto.veidemann.api.SeedListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.Seed>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.Seed, 1));
};


/** @param {!Array<!proto.veidemann.api.Seed>} value */
proto.veidemann.api.SeedListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.Seed=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.Seed}
 */
proto.veidemann.api.SeedListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.Seed, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.SeedListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.SeedListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.SeedListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.SeedListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.SeedListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.SeedListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.SeedListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.CrawlJobListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlJobListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlJobListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlJobListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlJobListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.CrawlJob.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlJobListReply}
 */
proto.veidemann.api.CrawlJobListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlJobListReply;
  return proto.veidemann.api.CrawlJobListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlJobListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlJobListReply}
 */
proto.veidemann.api.CrawlJobListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.CrawlJob;
      reader.readMessage(value,veidemann_api_config_pb.CrawlJob.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlJobListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlJobListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlJobListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlJobListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.CrawlJob.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated CrawlJob value = 1;
 * @return {!Array<!proto.veidemann.api.CrawlJob>}
 */
proto.veidemann.api.CrawlJobListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.CrawlJob>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.CrawlJob, 1));
};


/** @param {!Array<!proto.veidemann.api.CrawlJob>} value */
proto.veidemann.api.CrawlJobListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.CrawlJob=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.CrawlJob}
 */
proto.veidemann.api.CrawlJobListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.CrawlJob, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.CrawlJobListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.CrawlJobListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlJobListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.CrawlJobListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlJobListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.CrawlJobListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlJobListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.CrawlConfigListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlConfigListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlConfigListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlConfigListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlConfigListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.CrawlConfig.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlConfigListReply}
 */
proto.veidemann.api.CrawlConfigListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlConfigListReply;
  return proto.veidemann.api.CrawlConfigListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlConfigListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlConfigListReply}
 */
proto.veidemann.api.CrawlConfigListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.CrawlConfig;
      reader.readMessage(value,veidemann_api_config_pb.CrawlConfig.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlConfigListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlConfigListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlConfigListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlConfigListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.CrawlConfig.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated CrawlConfig value = 1;
 * @return {!Array<!proto.veidemann.api.CrawlConfig>}
 */
proto.veidemann.api.CrawlConfigListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.CrawlConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.CrawlConfig, 1));
};


/** @param {!Array<!proto.veidemann.api.CrawlConfig>} value */
proto.veidemann.api.CrawlConfigListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.CrawlConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.CrawlConfig}
 */
proto.veidemann.api.CrawlConfigListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.CrawlConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.CrawlConfigListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.CrawlConfigListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlConfigListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.CrawlConfigListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlConfigListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.CrawlConfigListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlConfigListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.CrawlScheduleConfigListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlScheduleConfigListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlScheduleConfigListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlScheduleConfigListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.CrawlScheduleConfig.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlScheduleConfigListReply}
 */
proto.veidemann.api.CrawlScheduleConfigListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlScheduleConfigListReply;
  return proto.veidemann.api.CrawlScheduleConfigListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlScheduleConfigListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlScheduleConfigListReply}
 */
proto.veidemann.api.CrawlScheduleConfigListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.CrawlScheduleConfig;
      reader.readMessage(value,veidemann_api_config_pb.CrawlScheduleConfig.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlScheduleConfigListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlScheduleConfigListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlScheduleConfigListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.CrawlScheduleConfig.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated CrawlScheduleConfig value = 1;
 * @return {!Array<!proto.veidemann.api.CrawlScheduleConfig>}
 */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.CrawlScheduleConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.CrawlScheduleConfig, 1));
};


/** @param {!Array<!proto.veidemann.api.CrawlScheduleConfig>} value */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.CrawlScheduleConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.CrawlScheduleConfig}
 */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.CrawlScheduleConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlScheduleConfigListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.PolitenessConfigListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.PolitenessConfigListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.PolitenessConfigListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.PolitenessConfigListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.PolitenessConfigListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.PolitenessConfig.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.PolitenessConfigListReply}
 */
proto.veidemann.api.PolitenessConfigListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.PolitenessConfigListReply;
  return proto.veidemann.api.PolitenessConfigListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.PolitenessConfigListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.PolitenessConfigListReply}
 */
proto.veidemann.api.PolitenessConfigListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.PolitenessConfig;
      reader.readMessage(value,veidemann_api_config_pb.PolitenessConfig.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.PolitenessConfigListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.PolitenessConfigListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.PolitenessConfigListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.PolitenessConfigListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.PolitenessConfig.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated PolitenessConfig value = 1;
 * @return {!Array<!proto.veidemann.api.PolitenessConfig>}
 */
proto.veidemann.api.PolitenessConfigListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.PolitenessConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.PolitenessConfig, 1));
};


/** @param {!Array<!proto.veidemann.api.PolitenessConfig>} value */
proto.veidemann.api.PolitenessConfigListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.PolitenessConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.PolitenessConfig}
 */
proto.veidemann.api.PolitenessConfigListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.PolitenessConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.PolitenessConfigListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.PolitenessConfigListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.PolitenessConfigListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.PolitenessConfigListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.PolitenessConfigListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.PolitenessConfigListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.PolitenessConfigListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.BrowserConfigListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.BrowserConfigListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.BrowserConfigListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.BrowserConfigListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.BrowserConfigListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.BrowserConfig.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.BrowserConfigListReply}
 */
proto.veidemann.api.BrowserConfigListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.BrowserConfigListReply;
  return proto.veidemann.api.BrowserConfigListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.BrowserConfigListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.BrowserConfigListReply}
 */
proto.veidemann.api.BrowserConfigListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.BrowserConfig;
      reader.readMessage(value,veidemann_api_config_pb.BrowserConfig.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.BrowserConfigListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.BrowserConfigListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.BrowserConfigListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.BrowserConfigListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.BrowserConfig.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated BrowserConfig value = 1;
 * @return {!Array<!proto.veidemann.api.BrowserConfig>}
 */
proto.veidemann.api.BrowserConfigListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.BrowserConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.BrowserConfig, 1));
};


/** @param {!Array<!proto.veidemann.api.BrowserConfig>} value */
proto.veidemann.api.BrowserConfigListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.BrowserConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.BrowserConfig}
 */
proto.veidemann.api.BrowserConfigListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.BrowserConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.BrowserConfigListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.BrowserConfigListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserConfigListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.BrowserConfigListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserConfigListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.BrowserConfigListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserConfigListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.BrowserScriptListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.BrowserScriptListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.BrowserScriptListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.BrowserScriptListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.BrowserScriptListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.BrowserScript.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.BrowserScriptListReply}
 */
proto.veidemann.api.BrowserScriptListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.BrowserScriptListReply;
  return proto.veidemann.api.BrowserScriptListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.BrowserScriptListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.BrowserScriptListReply}
 */
proto.veidemann.api.BrowserScriptListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.BrowserScript;
      reader.readMessage(value,veidemann_api_config_pb.BrowserScript.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.BrowserScriptListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.BrowserScriptListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.BrowserScriptListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.BrowserScriptListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.BrowserScript.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated BrowserScript value = 1;
 * @return {!Array<!proto.veidemann.api.BrowserScript>}
 */
proto.veidemann.api.BrowserScriptListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.BrowserScript>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.BrowserScript, 1));
};


/** @param {!Array<!proto.veidemann.api.BrowserScript>} value */
proto.veidemann.api.BrowserScriptListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.BrowserScript=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.BrowserScript}
 */
proto.veidemann.api.BrowserScriptListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.BrowserScript, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.BrowserScriptListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.BrowserScriptListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserScriptListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.BrowserScriptListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserScriptListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.BrowserScriptListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.BrowserScriptListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.CrawlHostGroupConfigListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.CrawlHostGroupConfigListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.CrawlHostGroupConfig.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.CrawlHostGroupConfigListReply}
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.CrawlHostGroupConfigListReply;
  return proto.veidemann.api.CrawlHostGroupConfigListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.CrawlHostGroupConfigListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.CrawlHostGroupConfigListReply}
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.CrawlHostGroupConfig;
      reader.readMessage(value,veidemann_api_config_pb.CrawlHostGroupConfig.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.CrawlHostGroupConfigListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.CrawlHostGroupConfigListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.CrawlHostGroupConfig.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated CrawlHostGroupConfig value = 1;
 * @return {!Array<!proto.veidemann.api.CrawlHostGroupConfig>}
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.CrawlHostGroupConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.CrawlHostGroupConfig, 1));
};


/** @param {!Array<!proto.veidemann.api.CrawlHostGroupConfig>} value */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.CrawlHostGroupConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.CrawlHostGroupConfig}
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.CrawlHostGroupConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.CrawlHostGroupConfigListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.RunCrawlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.RunCrawlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.RunCrawlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RunCrawlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    seedId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.RunCrawlRequest}
 */
proto.veidemann.api.RunCrawlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.RunCrawlRequest;
  return proto.veidemann.api.RunCrawlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.RunCrawlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.RunCrawlRequest}
 */
proto.veidemann.api.RunCrawlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeedId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.RunCrawlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.RunCrawlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.RunCrawlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RunCrawlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSeedId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string job_id = 5;
 * @return {string}
 */
proto.veidemann.api.RunCrawlRequest.prototype.getJobId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.veidemann.api.RunCrawlRequest.prototype.setJobId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string seed_id = 6;
 * @return {string}
 */
proto.veidemann.api.RunCrawlRequest.prototype.getSeedId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.veidemann.api.RunCrawlRequest.prototype.setSeedId = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.RunCrawlReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.RunCrawlReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.RunCrawlReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RunCrawlReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobExecutionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.RunCrawlReply}
 */
proto.veidemann.api.RunCrawlReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.RunCrawlReply;
  return proto.veidemann.api.RunCrawlReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.RunCrawlReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.RunCrawlReply}
 */
proto.veidemann.api.RunCrawlReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobExecutionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.RunCrawlReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.RunCrawlReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.RunCrawlReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RunCrawlReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobExecutionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string job_execution_id = 1;
 * @return {string}
 */
proto.veidemann.api.RunCrawlReply.prototype.getJobExecutionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.RunCrawlReply.prototype.setJobExecutionId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.RoleList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.RoleList.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.RoleList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.RoleList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RoleList.toObject = function(includeInstance, msg) {
  var f, obj = {
    roleList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.RoleList}
 */
proto.veidemann.api.RoleList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.RoleList;
  return proto.veidemann.api.RoleList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.RoleList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.RoleList}
 */
proto.veidemann.api.RoleList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<!proto.veidemann.api.Role>} */ (reader.readPackedEnum());
      msg.setRoleList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.RoleList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.RoleList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.RoleList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RoleList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoleList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
};


/**
 * repeated Role role = 1;
 * @return {!Array<!proto.veidemann.api.Role>}
 */
proto.veidemann.api.RoleList.prototype.getRoleList = function() {
  return /** @type {!Array<!proto.veidemann.api.Role>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<!proto.veidemann.api.Role>} value */
proto.veidemann.api.RoleList.prototype.setRoleList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.veidemann.api.Role} value
 * @param {number=} opt_index
 */
proto.veidemann.api.RoleList.prototype.addRole = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.RoleList.prototype.clearRoleList = function() {
  this.setRoleList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.RoleMappingsListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.RoleMappingsListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.RoleMappingsListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RoleMappingsListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.RoleMappingsListRequest}
 */
proto.veidemann.api.RoleMappingsListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.RoleMappingsListRequest;
  return proto.veidemann.api.RoleMappingsListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.RoleMappingsListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.RoleMappingsListRequest}
 */
proto.veidemann.api.RoleMappingsListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.RoleMappingsListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.RoleMappingsListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.RoleMappingsListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RoleMappingsListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.RoleMappingsListRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.RoleMappingsListRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.RoleMappingsListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.RoleMappingsListRequest.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.RoleMappingsListRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.RoleMappingsListRequest.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.RoleMappingsListReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.RoleMappingsListReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.RoleMappingsListReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.RoleMappingsListReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RoleMappingsListReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    veidemann_api_config_pb.RoleMapping.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    page: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.RoleMappingsListReply}
 */
proto.veidemann.api.RoleMappingsListReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.RoleMappingsListReply;
  return proto.veidemann.api.RoleMappingsListReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.RoleMappingsListReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.RoleMappingsListReply}
 */
proto.veidemann.api.RoleMappingsListReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new veidemann_api_config_pb.RoleMapping;
      reader.readMessage(value,veidemann_api_config_pb.RoleMapping.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.RoleMappingsListReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.RoleMappingsListReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.RoleMappingsListReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.RoleMappingsListReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      veidemann_api_config_pb.RoleMapping.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * repeated RoleMapping value = 1;
 * @return {!Array<!proto.veidemann.api.RoleMapping>}
 */
proto.veidemann.api.RoleMappingsListReply.prototype.getValueList = function() {
  return /** @type{!Array<!proto.veidemann.api.RoleMapping>} */ (
    jspb.Message.getRepeatedWrapperField(this, veidemann_api_config_pb.RoleMapping, 1));
};


/** @param {!Array<!proto.veidemann.api.RoleMapping>} value */
proto.veidemann.api.RoleMappingsListReply.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.veidemann.api.RoleMapping=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.RoleMapping}
 */
proto.veidemann.api.RoleMappingsListReply.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.veidemann.api.RoleMapping, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.RoleMappingsListReply.prototype.clearValueList = function() {
  this.setValueList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.veidemann.api.RoleMappingsListReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.RoleMappingsListReply.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.RoleMappingsListReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.RoleMappingsListReply.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 page = 15;
 * @return {number}
 */
proto.veidemann.api.RoleMappingsListReply.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.RoleMappingsListReply.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.OpenIdConnectIssuerReply.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.OpenIdConnectIssuerReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.OpenIdConnectIssuerReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.OpenIdConnectIssuerReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    openIdConnectIssuer: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.OpenIdConnectIssuerReply}
 */
proto.veidemann.api.OpenIdConnectIssuerReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.OpenIdConnectIssuerReply;
  return proto.veidemann.api.OpenIdConnectIssuerReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.OpenIdConnectIssuerReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.OpenIdConnectIssuerReply}
 */
proto.veidemann.api.OpenIdConnectIssuerReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenIdConnectIssuer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.OpenIdConnectIssuerReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.OpenIdConnectIssuerReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.OpenIdConnectIssuerReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.OpenIdConnectIssuerReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenIdConnectIssuer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string open_id_connect_issuer = 1;
 * @return {string}
 */
proto.veidemann.api.OpenIdConnectIssuerReply.prototype.getOpenIdConnectIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.OpenIdConnectIssuerReply.prototype.setOpenIdConnectIssuer = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.veidemann.api);
