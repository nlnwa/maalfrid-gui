{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "maalfrid-gui": {
      "root": "",
      "sourceRoot": "src",
      "projectType": "application",
      "prefix": "app",
      "schematics": {
        "@schematics/angular:component": {
          "styleext": "scss"
        }
      },
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist",
            "index": "src/index.html",
            "main": "src/main.ts",
            "tsConfig": "tsconfig.app.json",
            "polyfills": "src/polyfills.ts",
            "assets": ["src/assets"],
            "styles": [
              "src/styles/styles.scss",
              "src/styles/theme.scss"
            ],
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              }
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "outputPath": "dist/prod",
              "baseHref": "/maalfrid/",
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "i18nFile": "src/assets/locale/messages.nn.xlf",
              "i18nFormat": "xlf",
              "i18nLocale": "nn",
              "i18nMissingTranslation": "error",
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ]
            },
            "production-nb" : {
              "outputPath": "dist/prod/nb",
              "baseHref": "/maalfrid/nb/",
              "i18nFile": "src/assets/locale/messages.nb.xlf",
              "i18nFormat": "xlf",
              "i18nLocale": "nb",
              "i18nMissingTranslation": "error",
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod-nb.ts"
                }
              ]
            },
            "development": {
              "outputPath": "dist/dev",
              "i18nFile": "src/assets/locale/messages.nn.xlf",
              "i18nFormat": "xlf",
              "i18nLocale": "nn",
              "i18nMissingTranslation": "error",
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.dev.ts"
                }
              ]
            },
            "development-nb" : {
              "outputPath": "dist/dev/nb",
              "baseHref": "/nb/",
              "aot": true,
              "i18nFile": "src/assets/locale/messages.nb.xlf",
              "i18nFormat": "xlf",
              "i18nLocale": "nb",
              "i18nMissingTranslation": "error",
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.dev-nb.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "maalfrid-gui:build",
            "proxyConfig": "proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "maalfrid-gui:build:production"
            },
            "production-nb": {
              "browserTarget": "maalfrid-gui:build:production-nb"
            },
            "development": {
              "browserTarget": "maalfrid-gui:build:development"
            },
            "development-nb" : {
              "browserTarget": "maalfrid-gui:build:development-nb"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "maalfrid-gui:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "karmaConfig": "karma.conf.js",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.spec.json",
            "scripts": [],
            "styles": [
              "src/styles/styles.scss",
              "src/styles/theme.scss"
            ],
            "assets": [
              "src/assets"
            ]
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "tsconfig.app.json",
              "tsconfig.spec.json",
              "e2e/tsconfig.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        },
        "e2e": {
          "builder": "@angular-devkit/build-angular:protractor",
          "options": {
            "protractorConfig": "e2e/protractor.conf.js",
            "devServerTarget": "maalfrid-gui:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "maalfrid-gui:serve:production"
            }
          }
        }
      }
    }
  },
  "defaultProject": "maalfrid-gui",
  "cli": {
    "packageManager": "yarn"
  }
}
